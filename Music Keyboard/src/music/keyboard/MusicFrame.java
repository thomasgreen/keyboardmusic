/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package music.keyboard;

import java.awt.KeyEventDispatcher;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Set;
import java.util.TreeSet;
import javafx.embed.swing.JFXPanel;
import javafx.event.ActionEvent;

/**
 *
 * @author Thomas
 */
public class MusicFrame extends javax.swing.JFrame {
    private double mytime;
    private boolean on = false;
    private int buttoncount = 0;
    private static final int JFXPANEL_WIDTH_INT = 500;
    private static final int JFXPANEL_HEIGHT_INT = 500;
    private static JFXPanel fxContainer;
    private int tempo = 120;
    private ArrayList<KeyNode> thelist = new ArrayList<KeyNode>();
    private double previoustime;
    private double previousprevioustime;
    private String lastchar;
    private double cumulativedistance;
    
    private class KeyNode {
        private String note;
        private double seconds;
        private double duration;
        public KeyNode(String note, double seconds, double duration) {
            this.note = note;
            this.seconds = seconds;
            this.duration = duration;
        }
        public String note() {
            return note;
        }
        public double seconds() {
            return seconds;
        }
        public double duration() {
            return duration;
        }
        
    }
    /**
     * Creates new form MusicFrame
     */
    public MusicFrame() {
        initComponents();
        KeyEventDispatcher keyEventDispatcher;
        keyEventDispatcher = new KeyEventDispatcher() {
            Set<Integer> pressedKeys = new TreeSet<Integer>();

            
            @Override
            public boolean dispatchKeyEvent(final KeyEvent e) {
                if (e.getID() == KeyEvent.KEY_PRESSED) {
                    int code = e.getKeyCode();
               
                    if (pressedKeys.contains(code)) {
                        return false;
                    }
                    else {
                        pressedKeys.add(code);
                        buttoncount += 1;
                        previousprevioustime = System.currentTimeMillis() / 1000.0 - previoustime;
                        previoustime = System.currentTimeMillis() / 1000.0;
                        lastchar = String.valueOf(e.getKeyChar());
                    }
                }
                if (e.getID() == KeyEvent.KEY_RELEASED) {
                    pressedKeys.remove(e.getKeyCode());
                    thelist.add(new KeyNode(lastchar, previousprevioustime, System.currentTimeMillis() / 1000.0 - previoustime));
                }
                // Pass the KeyEvent to the next KeyEventDispatcher in the chain
                return false;
            }
            
        };
    KeyboardFocusManager.getCurrentKeyboardFocusManager().addKeyEventDispatcher(keyEventDispatcher);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        record = new javax.swing.JButton();
        letempo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        text = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Set Beat");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        record.setText("Start Recording Music");
        record.setEnabled(false);
        record.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recordActionPerformed(evt);
            }
        });

        letempo.setText("Tempo: 120");

        text.setEditable(false);
        text.setColumns(20);
        text.setRows(5);
        jScrollPane1.setViewportView(text);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(record))
                            .addComponent(letempo))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(letempo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(record))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

                if (!on) {
                    System.out.println("Starting to count!");
                    buttoncount = 0;
                    mytime = System.currentTimeMillis();
                    on = true;
                }
                else {
                    mytime = System.currentTimeMillis() - mytime;
                    System.out.println("This is your beat: " + Math.round(60 * ((double) buttoncount / ((double) mytime / 1000.0))));
                    tempo = (int) Math.round(60 * ((double) buttoncount / ((double) mytime / 1000.0)));
                    on = false;
                    letempo.setText("Tempo: " + tempo);
                    record.setEnabled(true);
                }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void recordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recordActionPerformed
        if (!on) {
                    System.out.println("Starting to record notes!");
                    previoustime = System.currentTimeMillis();
                    thelist.clear();
                    on = true;
                }
                else {
                    for (int i = 0; i < thelist.size() - 1; i++) {
                        thelist.get(i).seconds = thelist.get(i + 1).seconds;
                    }
                    for (int i = 0; i < thelist.size() - 1; i++) {
                        thelist.get(i + 1).seconds += thelist.get(i).seconds;
                    }
                    thelist.get(thelist.size() - 1).seconds = 0;
                    for (int i = 0; i < thelist.size(); i++) {
                        text.setText(text.getText() + thelist.get(i).note + " " + thelist.get(i).duration + " " + thelist.get(i).seconds + " //");
                        System.out.print(thelist.get(i).note + thelist.get(i).seconds);
                    }
                    on = false;
                    
                }
    }//GEN-LAST:event_recordActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MusicFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MusicFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MusicFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MusicFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MusicFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel letempo;
    private javax.swing.JButton record;
    private javax.swing.JTextArea text;
    // End of variables declaration//GEN-END:variables
}
